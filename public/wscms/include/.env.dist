APP_DEBUG=false

DB_1_HOST=
DB_1_NAME=
DB_1_USER=
DB_1_PASS=
DB_1_PREFIX=

SITE_CODE_KEY=

# leave out 'o' to avoid confusion with '0'
SESSION_RANDOM_KEY=

GOOGLE_RECAPTCHA_KEY=
GOOGLE_RECAPTCHA_SECRET=

GOOGLE_MAP_API_KEY=

GOOGLE_ANALYTICS_CODE=

# https://symfony.com/doc/current/mailer.html
# comma-separated values
MAIL_TO_EMAILS=dev@domain.tld

MAIL_FROM_NAME='Company'
MAIL_FROM_EMAIL=noreply@domain.tld

# https://github.com/symfony/symfony/issues/41322
# https://stackoverflow.com/a/14253556/3929620
# https://stackoverflow.com/a/25873119/3929620
# You must not set more than one sender address on a message,
# because it's not possible for more than one person to send a single message.
MAIL_SENDER_NAME='Provider'
MAIL_SENDER_EMAIL=webmaster@domain.tld

# overwritten by the Sender
MAIL_RETURN_PATH=webmaster@domain.tld

# comma-separated values: oauth2-smtp, oauth2-graph, smtp, smtps, sendmail, native, file, null
# oauth2-smtp = OAuth2 SMTP transport (requires full OAuth2 configuration)
# oauth2-graph = OAuth2 Graph API transport (requires full OAuth2 + Graph API configuration)
# file = Custom transport to save emails to files (for debugging and as fallback option)
MAIL_TRANSPORTS=

# failover, roundrobin
MAIL_TRANSPORTS_TECHNIQUE=failover

# Standard SMTP configuration (fallback)
MAIL_SMTP_USERNAME=
MAIL_SMTP_PASSWORD=
MAIL_SMTP_HOST=
MAIL_SMTP_PORT=

MAIL_SMTPS_USERNAME=
MAIL_SMTPS_PASSWORD=
MAIL_SMTPS_HOST=
MAIL_SMTPS_PORT=

# OAuth2 Configuration (provider-agnostic - ALL values must be explicitly configured)
# Provider type: microsoft-office365, google, etc. (REQUIRED - no default)
MAIL_OAUTH2_PROVIDER=

# OAuth2 credentials (REQUIRED for oauth2-smtp and oauth2-graph transports)
MAIL_OAUTH2_TENANT_ID=
MAIL_OAUTH2_CLIENT_ID=
MAIL_OAUTH2_CLIENT_SECRET=

# OAuth2 URLs and scopes (REQUIRED - must be configured based on your provider)
# Examples:
# Microsoft: https://outlook.office365.com/.default
# Google: https://www.googleapis.com/auth/gmail.send
MAIL_OAUTH2_SCOPE=
# Examples:
# Microsoft: https://login.microsoftonline.com/%s/oauth2/v2.0/token
# Google: https://oauth2.googleapis.com/token (note: no %s placeholder for Google)
MAIL_OAUTH2_TOKEN_URL=
# Cache key for token storage (optional - defaults to provider name if not specified)
MAIL_OAUTH2_CACHE_KEY=

# OAuth2 SMTP specific settings (REQUIRED when using oauth2-smtp transport)
# Examples:
# Microsoft: smtp.office365.com, port 587
# Google: smtp.gmail.com, port 587
# Mock: smtp-server, port 587 (Note: Mailpit supports plain/login but not OAuth2)
MAIL_OAUTH2_SMTP_HOST=
MAIL_OAUTH2_SMTP_PORT=
MAIL_OAUTH2_SMTP_USERNAME=
# Force OAuth2-only authentication when explicitly requested to prevent fallback
# to plain/login authenticators during OAuth2 testing. This ensures OAuth2 
# implementation works correctly without silently falling back to other methods
# (e.g., Mailpit supports plain/login but not OAuth2, causing authentication 
# to succeed with wrong method)
MAIL_OAUTH2_FORCE_ONLY=

# Graph API specific settings (REQUIRED when using oauth2-graph transport)
# Examples:
# Microsoft: https://graph.microsoft.com/.default
MAIL_OAUTH2_GRAPH_SCOPE=
# Examples:
# Microsoft: https://graph.microsoft.com/v1.0
MAIL_OAUTH2_GRAPH_BASE_URL=
MAIL_OAUTH2_GRAPH_USER_ID=
MAIL_OAUTH2_GRAPH_MAILBOX=

# Mock services (for local development)
MAIL_OAUTH2_MOCK_ENABLED=false
MAIL_OAUTH2_MOCK_URL=http://mock-oauth2:8080

MAIL_GRAPH_API_MOCK_ENABLED=false  
MAIL_GRAPH_API_MOCK_URL=http://mock-graph-api:8080

# File transport configuration
# Directory where emails will be saved when using file transport
# Defaults to PATH_TMP_DIR/emails if not specified
MAIL_FILE_PATH=

# Whether to continue to next transport after saving file (true/false)
# When enabled, file transport saves email then "fails" to trigger next transport
# Useful for backup + fallback scenarios (e.g., save copy then try sendmail)
MAIL_FILE_CONTINUE_ON_SUCCESS=true

# Supported modes are -bs and -t, with any additional flags desired.
# The recommended mode is "-bs" since it is interactive and failure notifications are hence possible.
# Note that the -t mode does not support error reporting and does not support Bcc properly (the Bcc headers are not removed).
# If using -t mode, you are strongly advised to include -oi or -i in the flags (like /usr/sbin/sendmail -oi -t)
# -f<sender> flag will be appended automatically if one is not present.
MAIL_SENDMAIL_COMMAND="/usr/sbin/sendmail -bs"
